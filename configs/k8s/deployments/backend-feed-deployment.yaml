apiVersion: apps/v1
kind: Deployment
metadata:
  name: udagram-backend-feed
  labels:
    app: udagram-backend-feed
spec:
  replicas: 2
  selector:
    matchLabels:
      app: udagram-backend-feed
  template:
    metadata:
      labels:
        app: udagram-backend-feed
    spec:
      initContainers:
      - name: init-aws-credentials
        image: busybox
        command: ['sh', '-c', 'echo "[default]" > /root/.aws/credentials && echo "aws_access_key_id=${AWS_ACCESS_KEY_ID}" >> /root/.aws/credentials && echo "aws_secret_access_key=${AWS_SECRET_ACCESS_KEY}" >> /root/.aws/credentials']
        env:
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: aws-secret
              key: aws_access_key_id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: aws-secret
              key: aws_secret_access_key
        volumeMounts:
        - name: aws-credentials-volume
          mountPath: /root/.aws/
      containers:
      - name: udagram-backend-feed
        image: skandaprasad98/udagram-api-feed
        imagePullPolicy: Always
        resources:
          requests:
            memory: "128Mi"
            cpu: "250m"
          limits:
            memory: "2048Mi"
            cpu: "500m"
        env:
        - name: URL
          valueFrom:
            configMapKeyRef:
              name: env-configmap
              key: URL
        - name: AWS_BUCKET
          valueFrom:
            configMapKeyRef:
              name: env-configmap
              key: AWS_BUCKET
        - name: AWS_PROFILE
          valueFrom:
            configMapKeyRef:
              name: env-configmap
              key: AWS_PROFILE
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              name: env-configmap
              key: AWS_REGION
        - name: JWT_SECRET
          valueFrom:
            configMapKeyRef:
              name: env-configmap
              key: JWT_SECRET
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: env-configmap
              key: POSTGRES_DB
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: env-configmap
              key: POSTGRES_HOST
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: env-secret
              key: POSTGRES_PASSWORD
        - name: POSTGRES_USERNAME
          valueFrom:
            secretKeyRef:
              name: env-secret
              key: POSTGRES_USERNAME
        volumeMounts:
        - name: aws-credentials-volume
          mountPath: "/root/.aws/"
      restartPolicy: Always
      volumes:
      - name: aws-credentials-volume
        emptyDir: {}
